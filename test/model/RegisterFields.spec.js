/**
 * Tpay.com Technical Documentation
 *  <p class=\"changes-disclaimer\"> Demo transaction/masspayments api key: <input type=\"text\" id=\"transaction_key\" value=\"75f86137a6635df826e3efe2e66f7c9a946fdde1\" class=\"ui-form-control\"/><label for=\"transaction_key\" style=\"display: none;\" id=\"tr_api_label\">COPIED!</label><br/><br/> Demo cards api key: <input type=\"text\" id=\"cards_key\" value=\"ba9a05faa697f9b43f39b84933ff168e373c6496\" class=\"ui-form-control\"/><label for=\"cards_key\" style=\"display: none;\" id=\"cards_api_label\">COPIED!</label><br/><br/> Demo registration api key: <input type=\"text\" id=\"registration_key\" value=\"6c0f5ef6e4d6877abad7fcfb3b5de117ad8b772d\" class=\"ui-form-control\"/><label for=\"registration_key\" style=\"display: none;\" id=\"registration_api_label\">COPIED!</label><br/><br/> The terms seller and merchant are used interchangeably and they both refer to a person or a company registered at tpay.com to accept online payments. <br/> Whenever term merchant panel is used it refers to the part of tpay.com website located at <a href=\"https://secure.tpay.com/panel\" target=\"_blank\">secure.tpay.com/panel</a>. <br/><br/> For sandbox purposes use merchant demo account <br/><br/> ID - 1010, Password - demo<br/><br/>Remember that this is a shared account, so all data passed through will be publicly visible.</p>
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: pt@tpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TpayComTechnicalDocumentation);
  }
}(this, function(expect, TpayComTechnicalDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TpayComTechnicalDocumentation.RegisterFields();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RegisterFields', function() {
    it('should create an instance of RegisterFields', function() {
      // uncomment below and update the code to test RegisterFields
      //var instane = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be.a(TpayComTechnicalDocumentation.RegisterFields);
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property nip (base name: "nip")', function() {
      // uncomment below and update the code to test the property nip
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property regon (base name: "regon")', function() {
      // uncomment below and update the code to test the property regon
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property krsedg (base name: "krsedg")', function() {
      // uncomment below and update the code to test the property krsedg
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property legalForm (base name: "legalForm")', function() {
      // uncomment below and update the code to test the property legalForm
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property branche (base name: "branche")', function() {
      // uncomment below and update the code to test the property branche
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property addressStreet (base name: "addressStreet")', function() {
      // uncomment below and update the code to test the property addressStreet
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property addressBlock (base name: "addressBlock")', function() {
      // uncomment below and update the code to test the property addressBlock
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property addressNr (base name: "addressNr")', function() {
      // uncomment below and update the code to test the property addressNr
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property addressCity (base name: "addressCity")', function() {
      // uncomment below and update the code to test the property addressCity
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property addressCode (base name: "addressCode")', function() {
      // uncomment below and update the code to test the property addressCode
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property createApi (base name: "createApi")', function() {
      // uncomment below and update the code to test the property createApi
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property offerCode (base name: "offerCode")', function() {
      // uncomment below and update the code to test the property offerCode
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property test (base name: "test")', function() {
      // uncomment below and update the code to test the property test
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

    it('should have the property apiPassword (base name: "api_password")', function() {
      // uncomment below and update the code to test the property apiPassword
      //var instance = new TpayComTechnicalDocumentation.RegisterFields();
      //expect(instance).to.be();
    });

  });

}));
