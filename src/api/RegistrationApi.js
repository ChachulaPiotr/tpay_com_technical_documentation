/**
 * Tpay.com Technical Documentation
 *  <p class=\"changes-disclaimer\"> Demo transaction/masspayments api key: <input type=\"text\" id=\"transaction_key\" value=\"75f86137a6635df826e3efe2e66f7c9a946fdde1\" class=\"ui-form-control\"/><label for=\"transaction_key\" style=\"display: none;\" id=\"tr_api_label\">COPIED!</label><br/><br/> Demo cards api key: <input type=\"text\" id=\"cards_key\" value=\"ba9a05faa697f9b43f39b84933ff168e373c6496\" class=\"ui-form-control\"/><label for=\"cards_key\" style=\"display: none;\" id=\"cards_api_label\">COPIED!</label><br/><br/> Demo registration api key: <input type=\"text\" id=\"registration_key\" value=\"6c0f5ef6e4d6877abad7fcfb3b5de117ad8b772d\" class=\"ui-form-control\"/><label for=\"registration_key\" style=\"display: none;\" id=\"registration_api_label\">COPIED!</label><br/><br/> The terms seller and merchant are used interchangeably and they both refer to a person or a company registered at tpay.com to accept online payments. <br/> Whenever term merchant panel is used it refers to the part of tpay.com website located at <a href=\"https://secure.tpay.com/panel\" target=\"_blank\">secure.tpay.com/panel</a>. <br/><br/> For sandbox purposes use merchant demo account <br/><br/> ID - 1010, Password - demo<br/><br/>Remember that this is a shared account, so all data passed through will be publicly visible.</p>
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: pt@tpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RegisterFields from '../model/RegisterFields';
import RegistrationInputFields from '../model/RegistrationInputFields';
import RegistrationInputsResponse from '../model/RegistrationInputsResponse';
import RegistrationRegisterResponse from '../model/RegistrationRegisterResponse';

/**
* Registration service.
* @module api/RegistrationApi
* @version 1.2.0
*/
export default class RegistrationApi {

    /**
    * Constructs a new RegistrationApi. 
    * @alias module:api/RegistrationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiGwApiKeyRegistrationInputsPost operation.
     * @callback module:api/RegistrationApi~apiGwApiKeyRegistrationInputsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegistrationInputsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * inputs
     * This method returns branches list and legal forms list which are available in Tpay.com. These data are required to correctly merchant registration. Branch id and legal form id should be sent in register method.
     * @param {String} apiKey The api key.
     * @param {Object} opts Optional parameters
     * @param {module:model/RegistrationInputFields} opts.basicData Registration inputs.
     * @param {module:api/RegistrationApi~apiGwApiKeyRegistrationInputsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegistrationInputsResponse}
     */
    apiGwApiKeyRegistrationInputsPost(apiKey, opts, callback) {
      opts = opts || {};
      let postBody = opts['basicData'];
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling apiGwApiKeyRegistrationInputsPost");
      }

      let pathParams = {
        'api_key': apiKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = RegistrationInputsResponse;
      return this.apiClient.callApi(
        '/api/gw/{api_key}/registration/inputs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiGwApiKeyRegistrationRegisterPost operation.
     * @callback module:api/RegistrationApi~apiGwApiKeyRegistrationRegisterPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegistrationRegisterResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * register
     * This method allows register new account in Tpay.com system. In response, the method returns data which can be used to generate new transactions. Optionally method returns access data for API transactions
     * @param {String} apiKey The api key.
     * @param {Object} opts Optional parameters
     * @param {module:model/RegisterFields} opts.registrtationRegisterData Register data
     * @param {module:api/RegistrationApi~apiGwApiKeyRegistrationRegisterPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegistrationRegisterResponse}
     */
    apiGwApiKeyRegistrationRegisterPost(apiKey, opts, callback) {
      opts = opts || {};
      let postBody = opts['registrtationRegisterData'];
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling apiGwApiKeyRegistrationRegisterPost");
      }

      let pathParams = {
        'api_key': apiKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = RegistrationRegisterResponse;
      return this.apiClient.callApi(
        '/api/gw/{api_key}/registration/register', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
