/**
 * Tpay.com Technical Documentation
 *  <p class=\"changes-disclaimer\"> Demo transaction/masspayments api key: <input type=\"text\" id=\"transaction_key\" value=\"75f86137a6635df826e3efe2e66f7c9a946fdde1\" class=\"ui-form-control\"/><label for=\"transaction_key\" style=\"display: none;\" id=\"tr_api_label\">COPIED!</label><br/><br/> Demo cards api key: <input type=\"text\" id=\"cards_key\" value=\"ba9a05faa697f9b43f39b84933ff168e373c6496\" class=\"ui-form-control\"/><label for=\"cards_key\" style=\"display: none;\" id=\"cards_api_label\">COPIED!</label><br/><br/> Demo registration api key: <input type=\"text\" id=\"registration_key\" value=\"6c0f5ef6e4d6877abad7fcfb3b5de117ad8b772d\" class=\"ui-form-control\"/><label for=\"registration_key\" style=\"display: none;\" id=\"registration_api_label\">COPIED!</label><br/><br/> The terms seller and merchant are used interchangeably and they both refer to a person or a company registered at tpay.com to accept online payments. <br/> Whenever term merchant panel is used it refers to the part of tpay.com website located at <a href=\"https://secure.tpay.com/panel\" target=\"_blank\">secure.tpay.com/panel</a>. <br/><br/> For sandbox purposes use merchant demo account <br/><br/> ID - 1010, Password - demo<br/><br/>Remember that this is a shared account, so all data passed through will be publicly visible.</p>
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: pt@tpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MasspaymentAuthorizeFields from '../model/MasspaymentAuthorizeFields';
import MasspaymentAuthorizeResponse from '../model/MasspaymentAuthorizeResponse';
import MasspaymentCreateFields from '../model/MasspaymentCreateFields';
import MasspaymentCreateResponse from '../model/MasspaymentCreateResponse';
import MasspaymentPacksFields from '../model/MasspaymentPacksFields';
import MasspaymentPacksResponse from '../model/MasspaymentPacksResponse';
import MasspaymentTransfersFields from '../model/MasspaymentTransfersFields';
import MasspaymentTransfersResponse from '../model/MasspaymentTransfersResponse';

/**
* Masspayments service.
* @module api/MasspaymentsApi
* @version 1.2.0
*/
export default class MasspaymentsApi {

    /**
    * Constructs a new MasspaymentsApi. 
    * @alias module:api/MasspaymentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiGwApiKeyMasspaymentAuthorizePost operation.
     * @callback module:api/MasspaymentsApi~apiGwApiKeyMasspaymentAuthorizePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MasspaymentAuthorizeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * authorize
     * This method authorizes the processing of chosen pack of transfers.
     * @param {String} apiKey The api key.
     * @param {Object} opts Optional parameters
     * @param {module:model/MasspaymentAuthorizeFields} opts.basicData Transaction data.
     * @param {module:api/MasspaymentsApi~apiGwApiKeyMasspaymentAuthorizePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MasspaymentAuthorizeResponse}
     */
    apiGwApiKeyMasspaymentAuthorizePost(apiKey, opts, callback) {
      opts = opts || {};
      let postBody = opts['basicData'];
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling apiGwApiKeyMasspaymentAuthorizePost");
      }

      let pathParams = {
        'api_key': apiKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = MasspaymentAuthorizeResponse;
      return this.apiClient.callApi(
        '/api/gw/{api_key}/masspayment/authorize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiGwApiKeyMasspaymentCreatePost operation.
     * @callback module:api/MasspaymentsApi~apiGwApiKeyMasspaymentCreatePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MasspaymentCreateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create
     * This method adds a pack of transfers to the Tpay system. After executing a correct operation, you need to request authorize method to confirm payout processing. Transfers are being made once a day on workdays. You can find confirmation code in Merchant Panel, settings tab-> notifications. Variable $seller_id is Merchant’s ID in tpay.com system. <br/><br/> <b>Example CSV file</b><br/> Each line contains one transfer formatted as in the example below. Columns are separated by a semicolon. <br/> The file does not have a header.<br/><br/> account number (26 digits);receiver (part 1) (35 characters);receiver (part 2) (35 characters);receiver (part 3) (35 characters);receiver (part 4) (35 characters);amount (dot or comma separator);title (part 1) (35 characters);title (part 2) (35 characters);Tpay transaction ID<br/><br/> Place transfer receiver name in 1-4 receiver fields. Each field can be maximum 35 characters long.<br/> If receiver name is for example 40 characters long, you should put 35 in receiver 1 field, and 5 characters in receiver 2 field.<br/> The same rule is valid for title field. The transaction ID field is not required, whithout this field, the file format looks like this: <br/><br/> account number (26 digits);receiver (part 1) (35 characters);receiver (part 2) (35 characters);receiver (part 3) (35 characters);receiver (part 4) (35 characters);amount (dot or comma separator);title (part 1) (35 characters);title (part 2) (35 characters);Transaction ID from merchant system<br/><br/> Example CSV file can be downloaded from:<br/> <a href=\"https://secure.tpay.com/partner/pliki/przyklad.csv\" target=\"_blank\">Download</a> 
     * @param {String} apiKey The api key.
     * @param {Object} opts Optional parameters
     * @param {module:model/MasspaymentCreateFields} opts.basicData Transaction data.
     * @param {module:api/MasspaymentsApi~apiGwApiKeyMasspaymentCreatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MasspaymentCreateResponse}
     */
    apiGwApiKeyMasspaymentCreatePost(apiKey, opts, callback) {
      opts = opts || {};
      let postBody = opts['basicData'];
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling apiGwApiKeyMasspaymentCreatePost");
      }

      let pathParams = {
        'api_key': apiKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = MasspaymentCreateResponse;
      return this.apiClient.callApi(
        '/api/gw/{api_key}/masspayment/create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiGwApiKeyMasspaymentPacksPost operation.
     * @callback module:api/MasspaymentsApi~apiGwApiKeyMasspaymentPacksPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MasspaymentPacksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * packs
     * This method allows browsing through created packages. If none of the parameters has been sent, all packages for the Merchant’s account will be returned. If any records exist, there will be pack objects in pack section representing respective transfer packages. You can send pack_id to browse contents of specific pack or send time range to browse all packages within time range
     * @param {String} apiKey The api key.
     * @param {Object} opts Optional parameters
     * @param {module:model/MasspaymentPacksFields} opts.basicData Transaction data.
     * @param {module:api/MasspaymentsApi~apiGwApiKeyMasspaymentPacksPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MasspaymentPacksResponse}
     */
    apiGwApiKeyMasspaymentPacksPost(apiKey, opts, callback) {
      opts = opts || {};
      let postBody = opts['basicData'];
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling apiGwApiKeyMasspaymentPacksPost");
      }

      let pathParams = {
        'api_key': apiKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = MasspaymentPacksResponse;
      return this.apiClient.callApi(
        '/api/gw/{api_key}/masspayment/packs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiGwApiKeyMasspaymentTransfersPost operation.
     * @callback module:api/MasspaymentsApi~apiGwApiKeyMasspaymentTransfersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MasspaymentTransfersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * transfers
     * This method allows browsing through transfers within one package. Required parameters (besides those described in mass payments main description), at least 1 is obligatory. If any records exist, there will be transfer objects in transfers section representing several transfers.
     * @param {String} apiKey The api key.
     * @param {Object} opts Optional parameters
     * @param {module:model/MasspaymentTransfersFields} opts.basicData Transaction data.
     * @param {module:api/MasspaymentsApi~apiGwApiKeyMasspaymentTransfersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MasspaymentTransfersResponse}
     */
    apiGwApiKeyMasspaymentTransfersPost(apiKey, opts, callback) {
      opts = opts || {};
      let postBody = opts['basicData'];
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling apiGwApiKeyMasspaymentTransfersPost");
      }

      let pathParams = {
        'api_key': apiKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = MasspaymentTransfersResponse;
      return this.apiClient.callApi(
        '/api/gw/{api_key}/masspayment/transfers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
