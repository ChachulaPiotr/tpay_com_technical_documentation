/**
 * Tpay.com Technical Documentation
 *  <p class=\"changes-disclaimer\"> Demo transaction/masspayments api key: <input type=\"text\" id=\"transaction_key\" value=\"75f86137a6635df826e3efe2e66f7c9a946fdde1\" class=\"ui-form-control\"/><label for=\"transaction_key\" style=\"display: none;\" id=\"tr_api_label\">COPIED!</label><br/><br/> Demo cards api key: <input type=\"text\" id=\"cards_key\" value=\"ba9a05faa697f9b43f39b84933ff168e373c6496\" class=\"ui-form-control\"/><label for=\"cards_key\" style=\"display: none;\" id=\"cards_api_label\">COPIED!</label><br/><br/> Demo registration api key: <input type=\"text\" id=\"registration_key\" value=\"6c0f5ef6e4d6877abad7fcfb3b5de117ad8b772d\" class=\"ui-form-control\"/><label for=\"registration_key\" style=\"display: none;\" id=\"registration_api_label\">COPIED!</label><br/><br/> The terms seller and merchant are used interchangeably and they both refer to a person or a company registered at tpay.com to accept online payments. <br/> Whenever term merchant panel is used it refers to the part of tpay.com website located at <a href=\"https://secure.tpay.com/panel\" target=\"_blank\">secure.tpay.com/panel</a>. <br/><br/> For sandbox purposes use merchant demo account <br/><br/> ID - 1010, Password - demo<br/><br/>Remember that this is a shared account, so all data passed through will be publicly visible.</p>
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: pt@tpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class CardsErrCode.
* @enum {}
* @readonly
*/
export default class CardsErrCode {
    
        /**
         * value: "1"
         * @const
         */
        "1" = "1";

    
        /**
         * value: "2"
         * @const
         */
        "2" = "2";

    
        /**
         * value: "3"
         * @const
         */
        "3" = "3";

    
        /**
         * value: "4"
         * @const
         */
        "4" = "4";

    
        /**
         * value: "5"
         * @const
         */
        "5" = "5";

    
        /**
         * value: "6"
         * @const
         */
        "6" = "6";

    
        /**
         * value: "7"
         * @const
         */
        "7" = "7";

    
        /**
         * value: "8"
         * @const
         */
        "8" = "8";

    
        /**
         * value: "9"
         * @const
         */
        "9" = "9";

    
        /**
         * value: "10"
         * @const
         */
        "10" = "10";

    
        /**
         * value: "11"
         * @const
         */
        "11" = "11";

    
        /**
         * value: "12"
         * @const
         */
        "12" = "12";

    
        /**
         * value: "13"
         * @const
         */
        "13" = "13";

    
        /**
         * value: "14"
         * @const
         */
        "14" = "14";

    
        /**
         * value: "15"
         * @const
         */
        "15" = "15";

    
        /**
         * value: "16"
         * @const
         */
        "16" = "16";

    
        /**
         * value: "17"
         * @const
         */
        "17" = "17";

    
        /**
         * value: "18"
         * @const
         */
        "18" = "18";

    

    /**
    * Returns a <code>CardsErrCode</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/CardsErrCode} The enum <code>CardsErrCode</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

