/**
 * Tpay.com Technical Documentation
 *  <p class=\"changes-disclaimer\"> Demo transaction/masspayments api key: <input type=\"text\" id=\"transaction_key\" value=\"75f86137a6635df826e3efe2e66f7c9a946fdde1\" class=\"ui-form-control\"/><label for=\"transaction_key\" style=\"display: none;\" id=\"tr_api_label\">COPIED!</label><br/><br/> Demo cards api key: <input type=\"text\" id=\"cards_key\" value=\"ba9a05faa697f9b43f39b84933ff168e373c6496\" class=\"ui-form-control\"/><label for=\"cards_key\" style=\"display: none;\" id=\"cards_api_label\">COPIED!</label><br/><br/> Demo registration api key: <input type=\"text\" id=\"registration_key\" value=\"6c0f5ef6e4d6877abad7fcfb3b5de117ad8b772d\" class=\"ui-form-control\"/><label for=\"registration_key\" style=\"display: none;\" id=\"registration_api_label\">COPIED!</label><br/><br/> The terms seller and merchant are used interchangeably and they both refer to a person or a company registered at tpay.com to accept online payments. <br/> Whenever term merchant panel is used it refers to the part of tpay.com website located at <a href=\"https://secure.tpay.com/panel\" target=\"_blank\">secure.tpay.com/panel</a>. <br/><br/> For sandbox purposes use merchant demo account <br/><br/> ID - 1010, Password - demo<br/><br/>Remember that this is a shared account, so all data passed through will be publicly visible.</p>
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: pt@tpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateFields model module.
 * @module model/CreateFields
 * @version 1.2.0
 */
class CreateFields {
    /**
     * Constructs a new <code>CreateFields</code>.
     * @alias module:model/CreateFields
     * @param id {Number} Merchant ID in Tpay.com system
     * @param amount {Number} Transaction amount. Please always send the amount with two decimal places like 10.00
     * @param description {String} Transaction description
     * @param md5sum {String} md5 sum calculated from id.'&'.amount.'&'.crc.'&'.security_code where dots means concatenation (security code can be found in merchant panel).
     * @param group {Number} Transaction group number see the \"id\" element in https://secure.tpay.com/groups-{id}0.js . For example https://secure.tpay.com/groups-10100.js or https://secure.tpay.com/groups-10100.js?json
     * @param email {String} customer email
     * @param name {String} customer name
     * @param apiPassword {String} API password.
     */
    constructor(id, amount, description, md5sum, group, email, name, apiPassword) { 
        
        CreateFields.initialize(this, id, amount, description, md5sum, group, email, name, apiPassword);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, amount, description, md5sum, group, email, name, apiPassword) { 
        obj['id'] = id;
        obj['amount'] = amount;
        obj['description'] = description;
        obj['md5sum'] = md5sum;
        obj['group'] = group;
        obj['email'] = email;
        obj['name'] = name;
        obj['api_password'] = apiPassword;
    }

    /**
     * Constructs a <code>CreateFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFields} obj Optional instance to populate.
     * @return {module:model/CreateFields} The populated <code>CreateFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFields();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('crc')) {
                obj['crc'] = ApiClient.convertToType(data['crc'], 'String');
            }
            if (data.hasOwnProperty('md5sum')) {
                obj['md5sum'] = ApiClient.convertToType(data['md5sum'], 'String');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'Number');
            }
            if (data.hasOwnProperty('result_url')) {
                obj['result_url'] = ApiClient.convertToType(data['result_url'], 'String');
            }
            if (data.hasOwnProperty('result_email')) {
                obj['result_email'] = ApiClient.convertToType(data['result_email'], 'String');
            }
            if (data.hasOwnProperty('merchant_description')) {
                obj['merchant_description'] = ApiClient.convertToType(data['merchant_description'], 'String');
            }
            if (data.hasOwnProperty('custom_description')) {
                obj['custom_description'] = ApiClient.convertToType(data['custom_description'], 'String');
            }
            if (data.hasOwnProperty('return_url')) {
                obj['return_url'] = ApiClient.convertToType(data['return_url'], 'String');
            }
            if (data.hasOwnProperty('return_error_url')) {
                obj['return_error_url'] = ApiClient.convertToType(data['return_error_url'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('zip')) {
                obj['zip'] = ApiClient.convertToType(data['zip'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('accept_tos')) {
                obj['accept_tos'] = ApiClient.convertToType(data['accept_tos'], 'Number');
            }
            if (data.hasOwnProperty('api_password')) {
                obj['api_password'] = ApiClient.convertToType(data['api_password'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Merchant ID in Tpay.com system
 * @member {Number} id
 */
CreateFields.prototype['id'] = undefined;

/**
 * Transaction amount. Please always send the amount with two decimal places like 10.00
 * @member {Number} amount
 */
CreateFields.prototype['amount'] = undefined;

/**
 * Transaction description
 * @member {String} description
 */
CreateFields.prototype['description'] = undefined;

/**
 * Auxiliary parameter to identify the transaction on the merchant side. We do recommend to encode your crc value in base64. The exact value of crc used to create transaction will be returned in tpay payment notification as tr_crc parameter.
 * @member {String} crc
 */
CreateFields.prototype['crc'] = undefined;

/**
 * md5 sum calculated from id.'&'.amount.'&'.crc.'&'.security_code where dots means concatenation (security code can be found in merchant panel).
 * @member {String} md5sum
 */
CreateFields.prototype['md5sum'] = undefined;

/**
 * Transaction group number see the \"id\" element in https://secure.tpay.com/groups-{id}0.js . For example https://secure.tpay.com/groups-10100.js or https://secure.tpay.com/groups-10100.js?json
 * @member {Number} group
 */
CreateFields.prototype['group'] = undefined;

/**
 * Merchant endpoint for payment notification
 * @member {String} result_url
 */
CreateFields.prototype['result_url'] = undefined;

/**
 * Email address where notification after payment will be sent (overrides defined in merchant panel). You can add more addresses by comma concatenation.
 * @member {String} result_email
 */
CreateFields.prototype['result_email'] = undefined;

/**
 * Name of merchant displayed in transaction panel (overrides defined in merchant panel)
 * @member {String} merchant_description
 */
CreateFields.prototype['merchant_description'] = undefined;

/**
 * Additional info to be displayed in transaction panel (overrides defined in merchant panel)
 * @member {String} custom_description
 */
CreateFields.prototype['custom_description'] = undefined;

/**
 * url to redirect customer in case of payment success
 * @member {String} return_url
 */
CreateFields.prototype['return_url'] = undefined;

/**
 * url to redirect customer in case of payment failure
 * @member {String} return_error_url
 */
CreateFields.prototype['return_error_url'] = undefined;

/**
 * Customer language
 * @member {module:model/CreateFields.LanguageEnum} language
 * @default 'pl'
 */
CreateFields.prototype['language'] = 'pl';

/**
 * customer email
 * @member {String} email
 */
CreateFields.prototype['email'] = undefined;

/**
 * customer name
 * @member {String} name
 */
CreateFields.prototype['name'] = undefined;

/**
 * customer address (parameter is empty if this field was not send with create method)
 * @member {String} address
 */
CreateFields.prototype['address'] = undefined;

/**
 * customer city (parameter is empty if this field was not send with create method)
 * @member {String} city
 */
CreateFields.prototype['city'] = undefined;

/**
 * customer postal code (parameter is empty if this field was not send with create method)
 * @member {String} zip
 */
CreateFields.prototype['zip'] = undefined;

/**
 * Two letters - see ISO 3166-1 document
 * @member {String} country
 */
CreateFields.prototype['country'] = undefined;

/**
 * customer phone number (parameter is empty if this field was not send with create method)
 * @member {String} phone
 */
CreateFields.prototype['phone'] = undefined;

/**
 * Acceptance of Tpay.com regulations done by customer on Merchant site
 * @member {Number} accept_tos
 */
CreateFields.prototype['accept_tos'] = undefined;

/**
 * API password.
 * @member {String} api_password
 */
CreateFields.prototype['api_password'] = undefined;





/**
 * Allowed values for the <code>language</code> property.
 * @enum {String}
 * @readonly
 */
CreateFields['LanguageEnum'] = {

    /**
     * value: "pl"
     * @const
     */
    "pl": "pl",

    /**
     * value: "en"
     * @const
     */
    "en": "en",

    /**
     * value: "de"
     * @const
     */
    "de": "de"
};



export default CreateFields;

