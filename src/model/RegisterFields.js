/**
 * Tpay.com Technical Documentation
 *  <p class=\"changes-disclaimer\"> Demo transaction/masspayments api key: <input type=\"text\" id=\"transaction_key\" value=\"75f86137a6635df826e3efe2e66f7c9a946fdde1\" class=\"ui-form-control\"/><label for=\"transaction_key\" style=\"display: none;\" id=\"tr_api_label\">COPIED!</label><br/><br/> Demo cards api key: <input type=\"text\" id=\"cards_key\" value=\"ba9a05faa697f9b43f39b84933ff168e373c6496\" class=\"ui-form-control\"/><label for=\"cards_key\" style=\"display: none;\" id=\"cards_api_label\">COPIED!</label><br/><br/> Demo registration api key: <input type=\"text\" id=\"registration_key\" value=\"6c0f5ef6e4d6877abad7fcfb3b5de117ad8b772d\" class=\"ui-form-control\"/><label for=\"registration_key\" style=\"display: none;\" id=\"registration_api_label\">COPIED!</label><br/><br/> The terms seller and merchant are used interchangeably and they both refer to a person or a company registered at tpay.com to accept online payments. <br/> Whenever term merchant panel is used it refers to the part of tpay.com website located at <a href=\"https://secure.tpay.com/panel\" target=\"_blank\">secure.tpay.com/panel</a>. <br/><br/> For sandbox purposes use merchant demo account <br/><br/> ID - 1010, Password - demo<br/><br/>Remember that this is a shared account, so all data passed through will be publicly visible.</p>
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: pt@tpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RegisterFields model module.
 * @module model/RegisterFields
 * @version 1.2.0
 */
class RegisterFields {
    /**
     * Constructs a new <code>RegisterFields</code>.
     * @alias module:model/RegisterFields
     * @param email {String} Merchant email. Access data for Tpay.com account will be send on this email after registration.
     * @param name {String} Merchant's company name.
     * @param nip {String} Taxpayer identification number.
     * @param legalForm {String} Legal Form Id received from 'inputs' method.
     * @param branche {Number} Branche id received from 'inputs' method.
     * @param phone {String} Merchant phone number
     * @param addressStreet {String} Merchant's company street address.
     * @param addressBlock {String} Merchant's company block number.
     * @param addressNr {String} Merchant's company local number.
     * @param addressCity {String} Merchant's company city address.
     * @param addressCode {String} Merchant's company city postal code.
     * @param apiPassword {String} API password.
     */
    constructor(email, name, nip, legalForm, branche, phone, addressStreet, addressBlock, addressNr, addressCity, addressCode, apiPassword) { 
        
        RegisterFields.initialize(this, email, name, nip, legalForm, branche, phone, addressStreet, addressBlock, addressNr, addressCity, addressCode, apiPassword);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, name, nip, legalForm, branche, phone, addressStreet, addressBlock, addressNr, addressCity, addressCode, apiPassword) { 
        obj['email'] = email;
        obj['name'] = name;
        obj['nip'] = nip;
        obj['legalForm'] = legalForm;
        obj['branche'] = branche;
        obj['phone'] = phone;
        obj['addressStreet'] = addressStreet;
        obj['addressBlock'] = addressBlock;
        obj['addressNr'] = addressNr;
        obj['addressCity'] = addressCity;
        obj['addressCode'] = addressCode;
        obj['api_password'] = apiPassword;
    }

    /**
     * Constructs a <code>RegisterFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegisterFields} obj Optional instance to populate.
     * @return {module:model/RegisterFields} The populated <code>RegisterFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegisterFields();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nip')) {
                obj['nip'] = ApiClient.convertToType(data['nip'], 'String');
            }
            if (data.hasOwnProperty('regon')) {
                obj['regon'] = ApiClient.convertToType(data['regon'], 'String');
            }
            if (data.hasOwnProperty('krsedg')) {
                obj['krsedg'] = ApiClient.convertToType(data['krsedg'], 'String');
            }
            if (data.hasOwnProperty('legalForm')) {
                obj['legalForm'] = ApiClient.convertToType(data['legalForm'], 'String');
            }
            if (data.hasOwnProperty('branche')) {
                obj['branche'] = ApiClient.convertToType(data['branche'], 'Number');
            }
            if (data.hasOwnProperty('website')) {
                obj['website'] = ApiClient.convertToType(data['website'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('addressStreet')) {
                obj['addressStreet'] = ApiClient.convertToType(data['addressStreet'], 'String');
            }
            if (data.hasOwnProperty('addressBlock')) {
                obj['addressBlock'] = ApiClient.convertToType(data['addressBlock'], 'String');
            }
            if (data.hasOwnProperty('addressNr')) {
                obj['addressNr'] = ApiClient.convertToType(data['addressNr'], 'String');
            }
            if (data.hasOwnProperty('addressCity')) {
                obj['addressCity'] = ApiClient.convertToType(data['addressCity'], 'String');
            }
            if (data.hasOwnProperty('addressCode')) {
                obj['addressCode'] = ApiClient.convertToType(data['addressCode'], 'String');
            }
            if (data.hasOwnProperty('createApi')) {
                obj['createApi'] = ApiClient.convertToType(data['createApi'], 'Number');
            }
            if (data.hasOwnProperty('offerCode')) {
                obj['offerCode'] = ApiClient.convertToType(data['offerCode'], 'String');
            }
            if (data.hasOwnProperty('test')) {
                obj['test'] = ApiClient.convertToType(data['test'], 'Number');
            }
            if (data.hasOwnProperty('api_password')) {
                obj['api_password'] = ApiClient.convertToType(data['api_password'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Merchant email. Access data for Tpay.com account will be send on this email after registration.
 * @member {String} email
 */
RegisterFields.prototype['email'] = undefined;

/**
 * Merchant's company name.
 * @member {String} name
 */
RegisterFields.prototype['name'] = undefined;

/**
 * Taxpayer identification number.
 * @member {String} nip
 */
RegisterFields.prototype['nip'] = undefined;

/**
 * National Business Registry Number.
 * @member {String} regon
 */
RegisterFields.prototype['regon'] = undefined;

/**
 * Entry number from National Court Register
 * @member {String} krsedg
 */
RegisterFields.prototype['krsedg'] = undefined;

/**
 * Legal Form Id received from 'inputs' method.
 * @member {String} legalForm
 */
RegisterFields.prototype['legalForm'] = undefined;

/**
 * Branche id received from 'inputs' method.
 * @member {Number} branche
 */
RegisterFields.prototype['branche'] = undefined;

/**
 * Merchant's website
 * @member {String} website
 */
RegisterFields.prototype['website'] = undefined;

/**
 * Merchant phone number
 * @member {String} phone
 */
RegisterFields.prototype['phone'] = undefined;

/**
 * Merchant's company street address.
 * @member {String} addressStreet
 */
RegisterFields.prototype['addressStreet'] = undefined;

/**
 * Merchant's company block number.
 * @member {String} addressBlock
 */
RegisterFields.prototype['addressBlock'] = undefined;

/**
 * Merchant's company local number.
 * @member {String} addressNr
 */
RegisterFields.prototype['addressNr'] = undefined;

/**
 * Merchant's company city address.
 * @member {String} addressCity
 */
RegisterFields.prototype['addressCity'] = undefined;

/**
 * Merchant's company city postal code.
 * @member {String} addressCode
 */
RegisterFields.prototype['addressCode'] = undefined;

/**
 * Generate access for API transaction. Access data (api_key and  api_password) will be returned in response.
 * @member {Number} createApi
 */
RegisterFields.prototype['createApi'] = undefined;

/**
 * Offer code dedicate for merchant and  generate by Sales Department.
 * @member {String} offerCode
 */
RegisterFields.prototype['offerCode'] = undefined;

/**
 * Parameter allows recieved an example response with merchant data without creating new account in Tpay.com system. Parameter is obligatory in initial stage of integration.
 * @member {Number} test
 */
RegisterFields.prototype['test'] = undefined;

/**
 * API password.
 * @member {String} api_password
 */
RegisterFields.prototype['api_password'] = undefined;






export default RegisterFields;

